#loading necessary packages
library(tidyverse)
library(haven)
library(gtsummary)
library(corrplot)
library(knitr)
library(tidyr)
library(ggplot2)
library(broom)
# Load the dataset
library(readr)
insurance <- read_csv("insurance.csv")
# Inspect the data
str(insurance)
summary(insurance)
head(insurance)
#loading necessary packages
library(tidyverse)
library(haven)
library(gtsummary)
library(corrplot)
library(knitr)
library(tidyr)
library(ggplot2)
library(broom)
# Load the dataset
library(readr)
insurance <- read_csv("insurance.csv")
# Inspect the data
str(insurance)
summary(insurance)
head(insurance)
View(insurance)
View(insurance)
library(readr)
insurance <- read_csv("insurance.csv")
View(insurance)
#loading necessary packages
library(tidyverse)
library(haven)
library(gtsummary)
library(corrplot)
library(knitr)
library(tidyr)
library(ggplot2)
library(broom)
library(sjPlot)
#loading necessary packages
library(tidyverse)
library(haven)
library(gtsummary)
library(corrplot)
library(knitr)
library(tidyr)
library(ggplot2)
library(broom)
library(sjPlot)
library(readr)
insurance <- read_csv("insurance.csv")
glimpse(insurance)
library(readr)
insurance <- read_csv("insurance.csv")
summary(insurance)
library(readr)
insurance <- read_csv("insurance.csv")
glimpse(insurance)
library(readr)
insurance <- read_csv("insurance.csv")
glimpse(insurance)
summary(insurance)
insurance$sex <- as.factor(insurance$sex)
insurance$smoker <- as.factor(insurance$smoker)
levels(insurance$sex)
levels(insurance$sex)
levels(insurance$smoker)
pairs(insurance[, c("age", "bmi", "children", "charges")])
cor_matrix <- cor(insurance[, c("age", "bmi", "children", "charges")])
#visualize the correlation matrix
corrplot(cor_matrix, method = "circle")
cor_matrix <- cor(insurance[, c("age", "bmi", "children", "charges")])
#visualize the correlation matrix
corrplot(cor_matrix)
cor_matrix <- cor(insurance[, c("age", "bmi", "children", "charges")])
#visualize the correlation matrix
corrplot(cor_matrix, method = "number")
ggplot(insurance, aes(x = smoker, y = charges, fill = smoker)) +
geom_boxplot() +
labs(title = "Health Insurance Cost by Smoking Status", y = "Charges (USD)")
insurance %>%
tbl_summary( label = list(age  ~ "Age", sex  ~ "Gender", bmi ~ "BMI" , children ~ "Number of Children", smoker ~ "Smoking Status",  charges ~ "Health Insurance Cost (USD)") ,
statistic = list(all_continuous() ~ "{mean} ({sd})")) %>% bold_labels() %>%
italicize_levels()
SLR_age <- lm(charges ~ age,data = insurance)
tab_model(SLR_age)
SLR_age <- lm(charges ~ age,
data = insurance)
summary(SLR_age)
SLR_sex <- lm(charges ~ sex,data = insurance)
tab_model(SLR_sex)
SLR_bmi <- lm(charges ~ bmi,
data = insurance)
tab_model(SLR_bmi)
SLR_children <- lm(charges ~ children,
data = insurance)
tab_model(SLR_children)
SLR_smoking <- lm(charges ~ smoker,
data = insurance)
tab_model(SLR_smoking)
#create a summary table for each model with confidence intervals
tbl_age <- tbl_regression(SLR_age, conf.level = 0.95)
tbl_sex <- tbl_regression(SLR_sex, conf.level = 0.95)
tbl_bmi <- tbl_regression(SLR_bmi, conf.level = 0.95)
tbl_children <- tbl_regression(SLR_children, conf.level = 0.95)
tbl_smoking <- tbl_regression(SLR_smoking, conf.level = 0.95)
#Combine all tables into one
SLR_table <- tbl_stack(
list(tbl_age, tbl_sex, tbl_children, tbl_smoking, tbl_bmi)
) %>%
as_gt() %>%
gt::tab_header(
title = "Simple Linear Regression Model"
)
#Print the summary table
SLR_table
MLR_modelA <- lm(charges ~ age + sex + children + bmi + smoker,
data = insurance)
tab_model(MLR_modelA)
tbl_regression(MLR_modelA)
tbl_regression(MLR_modelA)%>%  add_glance_table(include = c(adj.r.squared))
#loading necessary packages
library(tidyverse)
library(haven)
library(gtsummary)
library(corrplot)
library(knitr)
library(tidyr)
library(ggplot2)
library(broom)
library(sjPlot)
library(readr)
insurance <- read_csv("insurance.csv")
glimpse(insurance)
summary(insurance)
insurance$sex <- as.factor(insurance$sex)
insurance$smoker <- as.factor(insurance$smoker)
levels(insurance$sex)
levels(insurance$smoker)
pairs(insurance[, c("age", "bmi", "children", "charges")])
cor_matrix <- cor(insurance[, c("age", "bmi", "children", "charges")])
#visualize the correlation matrix
corrplot(cor_matrix, method = "circle")
cor_matrix <- cor(insurance[, c("age", "bmi", "children", "charges")])
#visualize the correlation matrix
corrplot(cor_matrix)
cor_matrix <- cor(insurance[, c("age", "bmi", "children", "charges")])
#visualize the correlation matrix
corrplot(cor_matrix, method = "number")
ggplot(insurance, aes(x = smoker, y = charges, fill = smoker)) +
geom_boxplot() +
labs(title = "Health Insurance Cost by Smoking Status", y = "Charges (USD)")
insurance %>%
tbl_summary( label = list(age  ~ "Age", sex  ~ "Gender", bmi ~ "BMI" , children ~ "Number of Children", smoker ~ "Smoking Status",  charges ~ "Health Insurance Cost (USD)") ,
statistic = list(all_continuous() ~ "{mean} ({sd})")) %>% bold_labels() %>%
italicize_levels()
SLR_age <- lm(charges ~ age,data = insurance)
tab_model(SLR_age)
SLR_age <- lm(charges ~ age,
data = insurance)
summary(SLR_age)
SLR_sex <- lm(charges ~ sex,data = insurance)
tab_model(SLR_sex)
SLR_bmi <- lm(charges ~ bmi,
data = insurance)
tab_model(SLR_bmi)
SLR_children <- lm(charges ~ children,
data = insurance)
tab_model(SLR_children)
SLR_smoking <- lm(charges ~ smoker,
data = insurance)
tab_model(SLR_smoking)
#create a summary table for each model with confidence intervals
tbl_age <- tbl_regression(SLR_age, conf.level = 0.95)
tbl_sex <- tbl_regression(SLR_sex, conf.level = 0.95)
tbl_bmi <- tbl_regression(SLR_bmi, conf.level = 0.95)
tbl_children <- tbl_regression(SLR_children, conf.level = 0.95)
tbl_smoking <- tbl_regression(SLR_smoking, conf.level = 0.95)
#Combine all tables into one
SLR_table <- tbl_stack(
list(tbl_age, tbl_sex, tbl_children, tbl_smoking, tbl_bmi)
) %>%
as_gt() %>%
gt::tab_header(
title = "Simple Linear Regression Model"
)
#Print the summary table
SLR_table
MLR_modelA <- lm(charges ~ age + sex + children + bmi + smoker,
data = insurance)
tab_model(MLR_modelA)
MLR_modelB <- lm(charges ~ age + sex + children + bmi + smoker + age:smoker,data = insurance)
tab_model(MLR_modelB)
tbl_regression(MLR_modelB) %>%  add_glance_table(include = c(adj.r.squared))
anova(MLR_modelA,MLR_modelB)
prelim.final.m <- lm (charges ~ age + sex + children + bmi + smoker,
data = insurance)
plot(prelim.final.m)
plot(prelim.final.m,which=1)
plot(prelim.final.m,which=2)
plot(prelim.final.m,which=3)
plot(prelim.final.m,which=5)
augment(prelim.final.m) %>%
ggplot(aes(x = age, y = .resid))+
geom_point()+
geom_smooth()
augment(prelim.final.m) %>%
ggplot(aes(x = age, y = .resid))
augment(prelim.final.m) %>%
ggplot(aes(x = children, y = .resid))+
geom_point()+
geom_smooth()
augment(prelim.final.m) %>%
ggplot(aes(x = bmi, y = .resid))+
geom_point()+
geom_smooth()
#extract residual value from model
res.model <- residuals(prelim.final.m)
head(res.model)
# Plot histogram of residuals
hist(res.model)
library(DT)
install.packages("DT")
library(DT)
library(DT)
insurance.pred.res <- augment(prelim.final.m)
insurance.pred.res %>% datatable()
new_insurance <-
insurance.pred.res %>%
filter(.std.resid < 2 & .std.resid > -2 )
final_model <- lm(charges ~ age + sex + children + smoker + bmi,
data = new_insurance)
summary(final_model)
plot(final_model, which = 1)
plot(final_model, which = 2)
plot(final_model, which = 3)
plot(final_model, which = 5)
augment(final_model) %>%
ggplot(aes(x = age, y = .resid))+
geom_point()+
geom_smooth()
augment(final_model) %>%
ggplot(aes(x = children, y = .resid))+
geom_point()+
geom_smooth()
augment(final_model) %>%
ggplot(aes(x = bmi, y = .resid))+
geom_point()+
geom_smooth()
#extract residual value from model
res.final_model <- residuals(final_model)
head(res.final_model)
# Plot histogram of residuals
hist(res.final_model)
# Plot histogram of residuals
hist(res.final_model,lines(x, y, col = "red", lwd = 2)  # Add normal distribution line)
# Plot histogram of residuals
hist(res.final_model)# Add normal distribution line)
library(gt)
library(gtsummary)
# Create regression table with additional metrics and formatting
tbl_regression(final_model) %>%
add_glance_table(include = c("adj.r.squared"))
library(equatiomatic)
install.packages("equatiomatic")
library(equatiomatic)
library(equatiomatic)
extract_eq(final_model, use_coefs = TRUE)
